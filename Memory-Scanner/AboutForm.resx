<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picMemoryScanner.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAN
        1wAADdcBQiibeAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAABwXSURBVHhe7d1r
        rF5XeSdwekGhV9B8oxppjO3EdhwnjuM6gVwccg8koTEhIXFujpMAEyCBXHAg6QzqiBamF6ktop0y06qU
        W2kHRqEpkDJT0lbzYXr5UrWVkKqRKiFNhTrth5nptEP37GUdk7Pe94lz9vuuffz62b8PPyn5H2ffstez
        /j4+PudlXdcBABMThgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBA
        bmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQW
        hgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEI
        AOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBA
        bmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQW
        hgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEI
        AOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBA
        bmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQW
        hgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEI
        AOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBAbmEIAOQWhgBA
        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
        cgtDACC3MAQAcgtDACC3MAQAcgtDACC3MAQAcgtDACC3MAQAcgtDACC3MAQAcgtDACC3MAQAcgtDACC3
        MAQAcgtDACC3MAQAcgtDACC3MAQAcgtDACC3MAQAcgtDACC3MAQAcgtDACC3MAQAcgtDACC3MAQAcgtD
        ACC3MAQAcgtDACC3MAQAcgtDACC3MAQAcgtDACC3MAQAcgtDACC3MAQAcgtDACC3MAQAcgtDACC3MAQA
        cgtDACC3MAQAcgtDACC3MAQAcgtDACC3MAQAcgtDACC3MAQAcgtDACC3MAQAcgtDACC3MAQAcgtDACC3
        MAQAcgtDACC3MAQAcgtDACC3MAQAcgtDACC3MAQAcgtDACC3MAQAcgtDACC3MAQAcgtDACC3MAQAcgtD
        ACC3MAQAcgtDACC3MAQAcgtDACC3MAQAcgtDACC3MAQAcgtDACC3MAQAcgtDACC3MAQAcgtDACC3MAQA
        cgtDACC3MAQAcgtDACC3MAQAcgtDACC3MAQAcgtDACC3MAQAcgtDACC3MAQAcgtDACC3MAQAcgtDACC3
        MAQAcgtDACC3MAQAcgtDACC3MAQAcgtDACC3MAQAcgtDACC3MAQAcgtDACC3MAQAcgtDACC3MAQAcgtD
        ACC3MAQAcgtDACC3MAQAcgtDACC3MAQAcgtDACC3MAQAcgtDACC3MAQAcgtDACC3MAQAcgtDACC3MAQA
        cgtDACC3MAQAcgtDACC3MAQAcgtDACC3MAQAcgtDACC3MAQAMute9v8BB2Jl9vhTo+EAAAAASUVORK5C
        YII=
</value>
  </data>
</root>